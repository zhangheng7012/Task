package com.dxz.admin.controller;

import com.dxz.admin.dao.ManagerMapper;
import com.dxz.admin.dao.UserMapper;
import com.dxz.admin.pojo.User;
import com.dxz.admin.pojo.UserExample;
import com.dxz.admin.result.CodeInfo;
import com.dxz.admin.result.Result;
import com.dxz.admin.service.PermissionService;
import com.dxz.admin.service.RoleService;
import com.dxz.admin.service.UserService;
import com.dxz.admin.utils.AliyunOSSUtil;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.annotation.Resource;
import javax.validation.Valid;
import javax.validation.constraints.Pattern;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/")
@Validated
public class UserController {

    private final Logger log = LoggerFactory.getLogger(this.getClass());

    @Autowired
    private UserService userService;
    @Resource
    private UserMapper userMapper;
    @Autowired
    private AliyunOSSUtil aliyunOSSUtil;
    @Resource
    private ManagerMapper managerMapper;
    @Autowired
    private PermissionService permissionService;
    @Autowired
    private RoleService roleService;

    // Long id,String name,Long phone,String email,
    // Integer grade, Long score, Integer status
    // 分类sort 为 1，学生
    // Long score 范围查询; Long minScore 最小值; Long maxScore 最大值
    @GetMapping("/a/u/user/list/search")
    public Result userList(@Valid User user,
                @Pattern(regexp = "^[1][3,4,5,6,7,8,9][0-9]{9}$", message = "手机号格式错误")String phone,
                @RequestParam(required = false, defaultValue = "1",value = "pageNumber") Integer pageNumber,
                @RequestParam(required = false, defaultValue = "10",value = "pageSize") Integer pageSize) {
        PageHelper.startPage(pageNumber,pageSize);
        List<User> users = null;
        try {
            // 分类sort 为 1，学生
            user.setSort(1);
            user.setPhone(Long.valueOf(phone));
            users = userService.findUserListSearch(user);
            if(users.size() == 0){
                log.info("无符合条件的用户");
                return new Result(CodeInfo.USER_FIND_NULL.getCode(),CodeInfo.USER_FIND_NULL.getMsg());
            }
        }catch (Exception e){
            log.error("用户列表获取失败：{}",e.getMessage());
            return new Result(CodeInfo.USER_LIST_GET_FAIL.getCode(),CodeInfo.USER_LIST_GET_FAIL.getMsg());
        }
        PageInfo<User> pageInfo = new PageInfo<User>(users);
        // 查询用户总数
        UserExample example = new UserExample();
        Long count = userMapper.countByExample(example);

        Map<String,Object> map = new HashMap<>();
        map.put("userSum",count);
        map.put("users",pageInfo);

        return new Result(CodeInfo.SUCCESS.getCode(),CodeInfo.SUCCESS.getMsg(),map);
    }

    // Long id,Integer status
    @PutMapping("/a/u/user/status")
    public Result updateUserStatus(@Valid User user) {
        Boolean a = userService.updateUserStatus(user);
        if (a) {
            log.info("用户 {} 状态修改成功", user.getId());
            return new Result(CodeInfo.SUCCESS.getCode(), CodeInfo.SUCCESS.getMsg());
        } else {
            log.error("用户 {} 状态修改失败", user.getId());
            return new Result(CodeInfo.USER_STATUS_UPDATE_FAIL.getCode(), CodeInfo.USER_STATUS_UPDATE_FAIL.getMsg());
        }
    }

    @PostMapping("/a/file/upload")
    public Result uploadFile(MultipartFile file){
        String url = "";
        if(file != null) {
            // 上传文件的大小，单位为字节，应该小于5MB
            if(file.getSize() < 5242880) {
                // 上传文件的类型，应该为jpg、png、jpeg，大小写均可
                if (aliyunOSSUtil.checkFileType(file)) {
                    url = aliyunOSSUtil.upPhoto(file);
                    if (url != null && !"".equals(url)) {
                        log.info("图片上传成功");
                        return new Result(CodeInfo.SUCCESS.getCode(), CodeInfo.SUCCESS.getMsg(), url);
                    } else {
                        log.error("图片上传失败");
                        return new Result(CodeInfo.PHOTO_UP_FAIL.getCode(), CodeInfo.PHOTO_UP_FAIL.getMsg());
                    }
                } else {
                    log.error("上传图片类型错误，应为jpg、png、jpeg");
                    return new Result(CodeInfo.PHOTO_TYPE_FAIL.getCode(), CodeInfo.PHOTO_TYPE_FAIL.getMsg());
                }
            } else {
                log.error("上传图片过大，应小于5MB");
                return new Result(CodeInfo.PHOTO_SIZE_FAIL.getCode(), CodeInfo.PHOTO_SIZE_FAIL.getMsg());
            }
        } else {
            log.error("上传图片为空");
            return new Result(CodeInfo.PHOTO_NULL.getCode(), CodeInfo.PHOTO_NULL.getMsg());
        }
    }

    @DeleteMapping("/a/file/path")
    public Result deletePhoto(String fileUrl){
        boolean result = aliyunOSSUtil.deletePhoto(fileUrl);
        if(result) {
            log.info("图片删除成功");
            return new Result(CodeInfo.SUCCESS.getCode(), CodeInfo.SUCCESS.getMsg());
        }else {
            log.info("图片删除失败");
            return new Result(CodeInfo.PHOTO_DELETE_FAIL.getCode(), CodeInfo.PHOTO_DELETE_FAIL.getMsg());
        }
    }
}
