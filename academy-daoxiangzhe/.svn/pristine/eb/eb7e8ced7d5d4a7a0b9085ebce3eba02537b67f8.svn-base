package com.dxz.home;

import com.dxz.home.dao.UserMapper;
import com.dxz.home.pojo.User;
import com.dxz.home.result.CodeInfo;
import com.dxz.home.result.Result;
import com.dxz.home.service.UserService;
import com.dxz.home.utils.SMSUtil;
import com.dxz.home.utils.SendMailUtil;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.web.multipart.MultipartFile;

import javax.annotation.Resource;

@RunWith(SpringRunner.class)
@SpringBootTest
public class HomeApplicationTests {

    private final Logger log = LoggerFactory.getLogger(this.getClass());

    @Autowired
    private UserService userService;
    @Resource
    private UserMapper userMapper;

    // 可能是 容联 放假，测试用的短信通道无法使用
    @Autowired
    private SMSUtil smsUtil;
    @Test
    public void testSMSUtils() {
        String phone="13068791270";
        boolean i = smsUtil.sendTelCode(phone);
        if(i){
            System.out.println("哈哈哈哈哈");
        }else {
            System.out.println("ooooooo");
        }
    }

    @Autowired
    private SendMailUtil sendMailUtil;
    @Test
    public void testSendMailUtil() {
        String mail="zhangheng@jnshu.com";
        boolean i = sendMailUtil.sendMailCode(mail);
        if(i){
            System.out.println("获取邮箱验证码成功");
        }else {
            System.out.println("获取邮箱验证码失败");
        }
    }

    @Test
    public void checkFileType() {
        String fileType = "";
        // 获取图片名称
        String fileName = "shigdiabas.jPG";
        int i = fileName.lastIndexOf(".");
        System.out.println(i);
        if (i > 0) {
            fileType = fileName.substring(i + 1).toUpperCase();
            System.out.println("类型" + fileType);
        }
        if ("JPG".equals(fileType) || "PNG".equals(fileType) || "JPEG".equals(fileType)){
            System.out.println("成功！");
        }
        System.out.println("失败！");
    }

    @Test
    public void contextLoads() {
        Long id = 1L;
        User user = null;
        try {
            user = userMapper.selectByPrimaryKey(id);
            if(user == null) {
                log.info("用户 {} 不存在", id);
            }
        }catch (Exception e){
            log.error("用户信息获取失败：{}",e.getMessage());
        }
        log.info("用户 {} ", user);
    }

    @Test
    public void update() {
        User user = new User();
        user.setId(5L);
        user.setName("哈哈哈");
        user.setAvatarUrl("wwwwwww");
        user.setGrade(2);
        try {
            Boolean a = userService.updateUser(user);
            if (a) {
                log.info("用户 {} 信息编辑成功", user.getId());
            } else {
                log.error("用户 {} 信息编辑失败", user.getId());
            }
        }catch (Exception e){
            log.error("用户 {} 信息编辑失败：{}", user.getId() ,e.getMessage());
        }
    }

}
