<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dxz.admin.dao.RoleMapper">

  <resultMap id="BaseResultMap" type="com.dxz.admin.pojo.Role">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="role_msg" jdbcType="VARCHAR" property="roleMsg" />
    <result column="create_at" jdbcType="BIGINT" property="createAt" />
    <result column="create_id" jdbcType="BIGINT" property="createId" />
    <result column="update_at" jdbcType="BIGINT" property="updateAt" />
    <result column="update_id" jdbcType="BIGINT" property="updateId" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Base_Column_List">
    id, name, role_msg, create_at, create_id, update_at, update_id
  </sql>

  <select id="listRolesByNull" resultMap="BaseResultMap">
    select r.id id,r.name name,r.role_msg,r.create_at,m1.name createBy,r.update_at,m2.name updateBy
    from role r
    left join manager m1 on r.create_id = m1.id
    left join manager m2 on r.update_id = m2.id
    order by r.id asc
  </select>

  <select id="listRolesByManagerId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select r.id, r.name, r.role_msg
    from role r
    left join manager_role mr on r.id = mr.rid
    left join manager m on m.id = mr.mid
    where m.id = #{id,jdbcType=BIGINT}
  </select>

  <select id="findRoleByName" parameterType="String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from role
    where name = #{name,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByRoleId" parameterType="java.lang.Long">
    delete r ,rp
    from role r
    left join role_permission rp ON r.id = rp.rid
    where r.id = #{id,jdbcType=BIGINT}
  </delete>

  <select id="selectByExample" parameterType="com.dxz.admin.pojo.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <delete id="deleteByExample" parameterType="com.dxz.admin.pojo.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.dxz.admin.pojo.Role" keyProperty="id" useGeneratedKeys="true">
    insert into role (id, name, role_msg, 
      create_at, create_id, update_at, 
      update_id)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{roleMsg,jdbcType=VARCHAR}, 
      #{createAt,jdbcType=BIGINT}, #{createId,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, 
      #{updateId,jdbcType=BIGINT})
  </insert>

  <insert id="insertSelective" parameterType="com.dxz.admin.pojo.Role" keyProperty="id" useGeneratedKeys="true">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null and name != ''">
        name,
      </if>
      <if test="roleMsg != null and roleMsg != ''">
        role_msg,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null and name != ''">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="roleMsg != null and roleMsg != ''">
        #{roleMsg,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=BIGINT},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dxz.admin.pojo.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null and record.name != ''">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.roleMsg != null and record.roleMsg != ''">
        role_msg = #{record.roleMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=BIGINT},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=BIGINT},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=BIGINT},
      </if>
      <if test="record.updateId != null">
        update_id = #{record.updateId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      role_msg = #{record.roleMsg,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=BIGINT},
      create_id = #{record.createId,jdbcType=BIGINT},
      update_at = #{record.updateAt,jdbcType=BIGINT},
      update_id = #{record.updateId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dxz.admin.pojo.Role">
    update role
    <set>
      <if test="name != null and name != ''">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="roleMsg != null and roleMsg != ''">
        role_msg = #{roleMsg,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dxz.admin.pojo.Role">
    update role
    set name = #{name,jdbcType=VARCHAR},
      role_msg = #{roleMsg,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=BIGINT},
      create_id = #{createId,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT},
      update_id = #{updateId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>