package com.dxz.admin.service.impl;

import com.dxz.admin.dao.PermissionMapper;
import com.dxz.admin.dao.RolePermissionMapper;
import com.dxz.admin.pojo.*;
import com.dxz.admin.service.PermissionService;
import com.dxz.admin.service.RoleService;
import org.apache.logging.log4j.LogManager;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import javax.annotation.Resource;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

@Service
public class PermissionServiceImpl implements PermissionService {

    private final Logger log = LoggerFactory.getLogger(this.getClass());

    @Resource
    PermissionMapper permissionMapper;
    @Autowired
    RoleService roleService;
    @Resource
    RolePermissionMapper rolePermissionMapper;

    @Transactional
    @Override
    public List<Permission> findPermissionByManagerName(String name) {
        List<Role> roles = roleService.listRolesByName(name);
        List<RolePermission> rolePermissions = new ArrayList<>();

        for (Role role : roles) {
            RolePermissionExample example = new RolePermissionExample();
            example.createCriteria().andRidEqualTo(role.getId());
            List<RolePermission> rps= rolePermissionMapper.selectByExample(example);
//            log.info("角色-权限关系：{}",rps);
            rolePermissions.addAll(rps);
        }

        List<Permission> pers = new ArrayList<>();
        for (RolePermission rolePermission : rolePermissions) {
            Permission p = permissionMapper.selectByPrimaryKey(rolePermission.getPid());
            pers.add(p);
        }
        return pers;
    }

    @Override
    public Set<String> listPermissionNames(String name) {
        Set<String> result = new HashSet<>();
        List<Permission> pers = findPermissionByManagerName(name);
        for (Permission per : pers) {
            result.add(per.getName());
//            log.info("拥有权限名称：{}",per.getName());
        }
        return result;
    }

    @Override
    public List<Permission> listPersByNull(){
        PermissionExample example =new PermissionExample();
//        example.setOrderByClause("id desc");
        List<Permission> pers = permissionMapper.selectByExample(example);
//        if(pers.size()!=0){
//            for (Permission per : pers) {
//                log.info("查询的权限ID：{}",per.getId());
//            }
//        }
        return pers;
    }

    @Override
    public boolean needInterceptor(String requestURI) {
        List<Permission> ps = listPersByNull();
        for (Permission p : ps) {
            if (p.getUrl().equals(requestURI))
                return true;
        }
        return false;
    }

    @Override
    public List<String> listPermissionURLs(String name) {
        List<String> result = new ArrayList<>();
        List<Permission> pers = findPermissionByManagerName(name);
        for (Permission per : pers) {
            result.add(per.getUrl());
//            log.info("拥有权限的url：{}",per.getUrl());
        }
        return result;
    }

    @Transactional
    @Override
    public List<Permission> listPersById(Long roleId) {
        List<Permission> pers = new ArrayList<>();
        RolePermissionExample example = new RolePermissionExample();
        example.createCriteria().andRidEqualTo(roleId);
        List<RolePermission> rolePers= rolePermissionMapper.selectByExample(example);

        for (RolePermission rolePer : rolePers) {
            Permission per = permissionMapper.selectByPrimaryKey(rolePer.getPid());
            pers.add(per);
        }
        return pers;
    }
}
