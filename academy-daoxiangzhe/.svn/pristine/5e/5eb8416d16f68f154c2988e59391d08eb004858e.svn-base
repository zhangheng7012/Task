<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dxz.admin.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.dxz.admin.pojo.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="phone" jdbcType="BIGINT" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="score" jdbcType="BIGINT" property="score" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="sign_sum" jdbcType="BIGINT" property="signSum" />
    <result column="sign_con" jdbcType="BIGINT" property="signCon" />
    <result column="sign_now_con" jdbcType="BIGINT" property="signNowCon" />
    <result column="create_at" jdbcType="BIGINT" property="createAt" />
    <result column="create_id" jdbcType="BIGINT" property="createId" />
    <result column="update_at" jdbcType="BIGINT" property="updateAt" />
    <result column="update_id" jdbcType="BIGINT" property="updateId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

<!--  <sql id="Base_Column_List">-->
<!--    id, name, avatar_url, sort, openid, phone, email, grade, score, status, sign_sum, -->
<!--    sign_con, sign_now_con, create_at, create_id, update_at, update_id-->
<!--  </sql>-->

  <sql id="Base_Column_List">
    id, name, avatar_url, sort, openid, phone, email, grade, score, status, sign_sum,
    sign_con, sign_now_con
  </sql>

  <select id="findUserListSearch" parameterType="com.dxz.admin.pojo.User"  resultMap="BaseResultMap">
    <if test="name != null and name != ''">
      <bind name="likename" value="'%' + name + '%'" />
    </if>
    select
    <include refid="Base_Column_List" />
    from user
    <where>
      <if test="id != null">
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="name != null and name != ''">
        and name like concat(#{likename,jdbcType=VARCHAR})
      </if>
      <if test="sort != null">
        and sort = #{sort,jdbcType=INTEGER}
      </if>
      <if test="openid != null and openid != ''">
        and openid = #{openid,jdbcType=VARCHAR}
      </if>
      <if test="phone != null">
        and phone = #{phone,jdbcType=BIGINT}
      </if>
      <if test="email != null and email != ''">
        and email = #{email,jdbcType=VARCHAR}
      </if>
      <if test="grade != null">
        and grade = #{grade,jdbcType=INTEGER}
      </if>
      <if test="minScore != null">
        and score &gt;= #{minScore,jdbcType=BIGINT}
      </if>
      <if test="maxScore != null">
        and score &lt;= #{maxScore,jdbcType=BIGINT}
      </if>
      <if test="status != null">
        and status = #{status,jdbcType=INTEGER}
      </if>
    </where>
  </select>

  <select id="findTeacherByName" parameterType="com.dxz.admin.pojo.User"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    <where>
      <if test="id != null">
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="name != null and name != ''">
        and name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="sort != null">
        and sort = #{sort,jdbcType=INTEGER}
      </if>
    </where>
  </select>

  <select id="selectByExample" parameterType="com.dxz.admin.pojo.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <delete id="deleteByExample" parameterType="com.dxz.admin.pojo.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.dxz.admin.pojo.User" keyProperty="id" useGeneratedKeys="true">
    insert into user (id, name, avatar_url, 
      sort, openid, phone, email, 
      grade, score, status, sign_sum, 
      sign_con, sign_now_con, create_at, 
      create_id, update_at, update_id
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{phone,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR},
      #{grade,jdbcType=INTEGER}, #{score,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{signSum,jdbcType=BIGINT},
      #{signCon,jdbcType=BIGINT}, #{signNowCon,jdbcType=BIGINT}, #{createAt,jdbcType=BIGINT}, 
      #{createId,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, #{updateId,jdbcType=BIGINT}
      )
  </insert>

  <insert id="insertSelective" parameterType="com.dxz.admin.pojo.User" keyProperty="id" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null and name != ''">
        name,
      </if>
      <if test="avatarUrl != null and avatarUrl != ''">
        avatar_url,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="openid != null and openid != ''">
        openid,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null and email != ''">
        email,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="signSum != null">
        sign_sum,
      </if>
      <if test="signCon != null">
        sign_con,
      </if>
      <if test="signNowCon != null">
        sign_now_con,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null and name != ''">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null and avatarUrl != ''">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="openid != null and openid != ''">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=BIGINT},
      </if>
      <if test="email != null and email != ''">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="signSum != null">
        #{signSum,jdbcType=BIGINT},
      </if>
      <if test="signCon != null">
        #{signCon,jdbcType=BIGINT},
      </if>
      <if test="signNowCon != null">
        #{signNowCon,jdbcType=BIGINT},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=BIGINT},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.dxz.admin.pojo.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null and record.name != ''">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.avatarUrl != null and record.avatarUrl != ''">
        avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.openid != null and record.openid != ''">
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=BIGINT},
      </if>
      <if test="record.email != null and record.email != ''">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.signSum != null">
        sign_sum = #{record.signSum,jdbcType=BIGINT},
      </if>
      <if test="record.signCon != null">
        sign_con = #{record.signCon,jdbcType=BIGINT},
      </if>
      <if test="record.signNowCon != null">
        sign_now_con = #{record.signNowCon,jdbcType=BIGINT},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=BIGINT},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=BIGINT},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=BIGINT},
      </if>
      <if test="record.updateId != null">
        update_id = #{record.updateId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      openid = #{record.openid,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=BIGINT},
      email = #{record.email,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=INTEGER},
      score = #{record.score,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      sign_sum = #{record.signSum,jdbcType=BIGINT},
      sign_con = #{record.signCon,jdbcType=BIGINT},
      sign_now_con = #{record.signNowCon,jdbcType=BIGINT},
      create_at = #{record.createAt,jdbcType=BIGINT},
      create_id = #{record.createId,jdbcType=BIGINT},
      update_at = #{record.updateAt,jdbcType=BIGINT},
      update_id = #{record.updateId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.dxz.admin.pojo.User">
    update user
    <set>
      <if test="name != null and name != ''">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null and avatarUrl != ''">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="openid != null and openid != ''">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=BIGINT},
      </if>
      <if test="email != null and email != ''">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="signSum != null">
        sign_sum = #{signSum,jdbcType=BIGINT},
      </if>
      <if test="signCon != null">
        sign_con = #{signCon,jdbcType=BIGINT},
      </if>
      <if test="signNowCon != null">
        sign_now_con = #{signNowCon,jdbcType=BIGINT},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.dxz.admin.pojo.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      openid = #{openid,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=BIGINT},
      email = #{email,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=INTEGER},
      score = #{score,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      sign_sum = #{signSum,jdbcType=BIGINT},
      sign_con = #{signCon,jdbcType=BIGINT},
      sign_now_con = #{signNowCon,jdbcType=BIGINT},
      create_at = #{createAt,jdbcType=BIGINT},
      create_id = #{createId,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT},
      update_id = #{updateId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>