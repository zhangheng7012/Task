package com.dxz.admin.controller;

import com.dxz.admin.dao.ManagerMapper;
import com.dxz.admin.dao.UserMapper;
import com.dxz.admin.pojo.Manager;
import com.dxz.admin.pojo.Role;
import com.dxz.admin.pojo.User;
import com.dxz.admin.pojo.UserExample;
import com.dxz.admin.result.CodeInfo;
import com.dxz.admin.result.Result;
import com.dxz.admin.service.ManagerService;
import com.dxz.admin.service.PermissionService;
import com.dxz.admin.service.RoleService;
import com.dxz.admin.service.UserService;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/")
public class UserController {

    private final Logger log = LoggerFactory.getLogger(this.getClass());

    @Autowired
    private UserService userService;
    @Resource
    private UserMapper userMapper;
    @Resource
    private ManagerMapper managerMapper;
    @Autowired
    private PermissionService permissionService;
    @Autowired
    private RoleService roleService;

    // Long id,String name,Long phone,String email,
    // Integer grade, Long score, Integer status
    // 分类sort 为 1，学生
    // Long score 范围查询; Long minScore 最小值; Long maxScore 最大值
    @GetMapping("/a/u/user/list/search")
    public Result userList(User user,
                            @RequestParam(required = false,
                                    defaultValue = "1",value = "pageNumber") Integer pageNumber,
                            @RequestParam(required = false,
                                    defaultValue = "10",value = "pageSize") Integer pageSize) {
        PageHelper.startPage(pageNumber,pageSize);
        List<User> users = null;
        try {
            // 分类sort 为 1，学生
            user.setSort(1);
            users = userService.findUserListSearch(user);
            if(users.size() == 0){
                log.error("无符合条件的用户");
                return new Result(CodeInfo.USER_FIND_NULL.getCode(),CodeInfo.USER_FIND_NULL.getMsg());
            }
        }catch (Exception e){
            log.error("用户列表获取失败：{}",e.getMessage());
            return new Result(CodeInfo.USER_LIST_GET_FAIL.getCode(),CodeInfo.USER_LIST_GET_FAIL.getMsg());
        }
        PageInfo<User> pageInfo = new PageInfo<User>(users);
        // 查询用户总数
        UserExample example = new UserExample();
        Long count = userMapper.countByExample(example);

        Map<String,Object> map = new HashMap<>();
        map.put("userSum",count);
        map.put("users",pageInfo);

        return new Result(CodeInfo.SUCCESS.getCode(),CodeInfo.SUCCESS.getMsg(),map);
    }

    // Long id,Integer status
    @PutMapping("/a/u/user/status")
    public Result updateUserStatus(User user) {
        try {
            Boolean a = userService.updateUserStatus(user);
            if (a) {
                log.info("用户 {} 状态修改成功", user.getId());
                return new Result(CodeInfo.SUCCESS.getCode(), CodeInfo.SUCCESS.getMsg());
            } else {
                log.error("用户 {} 状态修改失败", user.getId());
                return new Result(CodeInfo.USER_STATUS_UPDATE_FAIL.getCode(), CodeInfo.USER_STATUS_UPDATE_FAIL.getMsg());
            }
        }catch (Exception e){
            log.error("用户 {} 状态修改失败：{}", user.getId() ,e.getMessage());
            return new Result(CodeInfo.USER_STATUS_UPDATE_FAIL.getCode(), CodeInfo.USER_STATUS_UPDATE_FAIL.getMsg());
        }
    }

    @PostMapping("/a/file/upload")
    public Result uploadFile(){

            return new Result(CodeInfo.SUCCESS.getCode(), CodeInfo.SUCCESS.getMsg());
    }

    @DeleteMapping("/a/file/path")
    public Result deleteFile(String fileUrl){

            return new Result(CodeInfo.MANAGER_DELETE_FAIL.getCode(), CodeInfo.MANAGER_DELETE_FAIL.getMsg());

    }
}
