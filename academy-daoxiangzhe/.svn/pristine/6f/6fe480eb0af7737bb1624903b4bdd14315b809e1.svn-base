<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dxz.home.dao.CourseMapper">
  <resultMap id="BaseResultMap" type="com.dxz.home.pojo.Course">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="sort" jdbcType="BIT" property="sort" />
    <result column="banner_url" jdbcType="VARCHAR" property="bannerUrl" />
    <result column="grade" jdbcType="BIT" property="grade" />
    <result column="subject" jdbcType="BIT" property="subject" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="video_url" jdbcType="VARCHAR" property="videoUrl" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="love_sum" jdbcType="BIGINT" property="loveSum" />
    <result column="collect_sum" jdbcType="BIGINT" property="collectSum" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="teacher_id" jdbcType="BIGINT" property="teacherId" />
    <result column="create_at" jdbcType="BIGINT" property="createAt" />
    <result column="create_id" jdbcType="BIGINT" property="createId" />
    <result column="update_at" jdbcType="BIGINT" property="updateAt" />
    <result column="update_id" jdbcType="BIGINT" property="updateId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, sort, banner_url, grade, subject, introduction, video_url, content, love_sum, 
    collect_sum, status, teacher_id, create_at, create_id, update_at, update_id
  </sql>
  <select id="selectByExample" parameterType="com.dxz.home.pojo.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from course
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.dxz.home.pojo.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dxz.home.pojo.Course" keyProperty="id" useGeneratedKeys="true">
    insert into course (id, title, sort, banner_url, 
      grade, subject, introduction, 
      video_url, content, love_sum, 
      collect_sum, status, teacher_id, 
      create_at, create_id, update_at, 
      update_id)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{sort,jdbcType=BIT}, #{bannerUrl,jdbcType=VARCHAR}, 
      #{grade,jdbcType=BIT}, #{subject,jdbcType=BIT}, #{introduction,jdbcType=VARCHAR}, 
      #{videoUrl,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{loveSum,jdbcType=BIGINT}, 
      #{collectSum,jdbcType=BIGINT}, #{status,jdbcType=BIT}, #{teacherId,jdbcType=BIGINT}, 
      #{createAt,jdbcType=BIGINT}, #{createId,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, 
      #{updateId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.dxz.home.pojo.Course" keyProperty="id" useGeneratedKeys="true">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="bannerUrl != null">
        banner_url,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="videoUrl != null">
        video_url,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="loveSum != null">
        love_sum,
      </if>
      <if test="collectSum != null">
        collect_sum,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=BIT},
      </if>
      <if test="bannerUrl != null">
        #{bannerUrl,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=BIT},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=BIT},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="videoUrl != null">
        #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="loveSum != null">
        #{loveSum,jdbcType=BIGINT},
      </if>
      <if test="collectSum != null">
        #{collectSum,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=BIGINT},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dxz.home.pojo.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=BIT},
      </if>
      <if test="record.bannerUrl != null">
        banner_url = #{record.bannerUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=BIT},
      </if>
      <if test="record.subject != null">
        subject = #{record.subject,jdbcType=BIT},
      </if>
      <if test="record.introduction != null">
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.videoUrl != null">
        video_url = #{record.videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.loveSum != null">
        love_sum = #{record.loveSum,jdbcType=BIGINT},
      </if>
      <if test="record.collectSum != null">
        collect_sum = #{record.collectSum,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=BIGINT},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=BIGINT},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=BIGINT},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=BIGINT},
      </if>
      <if test="record.updateId != null">
        update_id = #{record.updateId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=BIT},
      banner_url = #{record.bannerUrl,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=BIT},
      subject = #{record.subject,jdbcType=BIT},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      video_url = #{record.videoUrl,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      love_sum = #{record.loveSum,jdbcType=BIGINT},
      collect_sum = #{record.collectSum,jdbcType=BIGINT},
      status = #{record.status,jdbcType=BIT},
      teacher_id = #{record.teacherId,jdbcType=BIGINT},
      create_at = #{record.createAt,jdbcType=BIGINT},
      create_id = #{record.createId,jdbcType=BIGINT},
      update_at = #{record.updateAt,jdbcType=BIGINT},
      update_id = #{record.updateId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dxz.home.pojo.Course">
    update course
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=BIT},
      </if>
      <if test="bannerUrl != null">
        banner_url = #{bannerUrl,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=BIT},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=BIT},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="videoUrl != null">
        video_url = #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="loveSum != null">
        love_sum = #{loveSum,jdbcType=BIGINT},
      </if>
      <if test="collectSum != null">
        collect_sum = #{collectSum,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dxz.home.pojo.Course">
    update course
    set title = #{title,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=BIT},
      banner_url = #{bannerUrl,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=BIT},
      subject = #{subject,jdbcType=BIT},
      introduction = #{introduction,jdbcType=VARCHAR},
      video_url = #{videoUrl,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      love_sum = #{loveSum,jdbcType=BIGINT},
      collect_sum = #{collectSum,jdbcType=BIGINT},
      status = #{status,jdbcType=BIT},
      teacher_id = #{teacherId,jdbcType=BIGINT},
      create_at = #{createAt,jdbcType=BIGINT},
      create_id = #{createId,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT},
      update_id = #{updateId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>