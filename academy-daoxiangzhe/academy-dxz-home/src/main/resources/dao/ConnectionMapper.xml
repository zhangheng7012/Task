<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dxz.home.dao.ConnectionMapper">
  <resultMap id="BaseResultMap" type="com.dxz.home.pojo.Connection">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="vid" jdbcType="BIGINT" property="vid" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_at" jdbcType="BIGINT" property="createAt" />
    <result column="create_id" jdbcType="BIGINT" property="createId" />
    <result column="update_at" jdbcType="BIGINT" property="updateAt" />
    <result column="update_id" jdbcType="BIGINT" property="updateId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, vid, uid, status, create_at, create_id, update_at, update_id
  </sql>

  <select id="findCourseConnection" parameterType="com.dxz.home.pojo.Connection" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from connection
    <where>
      <if test="vid != null">
        and vid = #{vid,jdbcType=BIGINT}
      </if>
      <if test="uid != null">
        and uid = #{uid,jdbcType=BIGINT}
      </if>
      <if test="status != null">
        and status = #{status,jdbcType=INTEGER}
      </if>
    </where>
    order by create_at desc
  </select>

  <delete id="deleteConnection" parameterType="com.dxz.home.pojo.Connection">
    delete from connection
    where vid = #{vid,jdbcType=BIGINT}
    and uid = #{uid,jdbcType=BIGINT} and status = #{status,jdbcType=INTEGER}
  </delete>

  <select id="selectByExample" parameterType="com.dxz.home.pojo.ConnectionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from connection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from connection
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from connection
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.dxz.home.pojo.ConnectionExample">
    delete from connection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dxz.home.pojo.Connection" keyProperty="id" useGeneratedKeys="true">
    insert into connection (id, vid, uid, status, 
      create_at, create_id, update_at, 
      update_id)
    values (#{id,jdbcType=BIGINT}, #{vid,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{status,jdbcType=INTEGER},
      #{createAt,jdbcType=BIGINT}, #{createId,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, 
      #{updateId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.dxz.home.pojo.Connection" keyProperty="id" useGeneratedKeys="true">
    insert into connection
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="vid != null">
        vid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="vid != null">
        #{vid,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=BIGINT},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dxz.home.pojo.ConnectionExample" resultType="java.lang.Long">
    select count(*) from connection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update connection
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.vid != null">
        vid = #{record.vid,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=BIGINT},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=BIGINT},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=BIGINT},
      </if>
      <if test="record.updateId != null">
        update_id = #{record.updateId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update connection
    set id = #{record.id,jdbcType=BIGINT},
      vid = #{record.vid,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      create_at = #{record.createAt,jdbcType=BIGINT},
      create_id = #{record.createId,jdbcType=BIGINT},
      update_at = #{record.updateAt,jdbcType=BIGINT},
      update_id = #{record.updateId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dxz.home.pojo.Connection">
    update connection
    <set>
      <if test="vid != null">
        vid = #{vid,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dxz.home.pojo.Connection">
    update connection
    set vid = #{vid,jdbcType=BIGINT},
      uid = #{uid,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=BIGINT},
      create_id = #{createId,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT},
      update_id = #{updateId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>